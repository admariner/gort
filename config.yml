global:
  # How long before a command times out, in seconds.
  # TODO Allow overriding at the command level
  command_timeout_seconds: 60

gort:
  # Gort will automatically create accounts for new users when set.
  # User accounts created this way will still need to be placed into groups
  # by an administrator in order to be granted any permissions.
  allow_self_registration: true

  # The address to listen on for Gort’s REST API. Defaults to ":4000".
  api_address: ":4000"

  # Controls the prefix of URLs generated for the core API. URLs may contain a
  # scheme (either http or https), a host, an optional port (defaulting to 80
  # for http and 443 for https), and an optional path.
  # Defaults to localhost
  api_url_base: localhost

  # Enables development mode. Currently this only affects log output format.
  # Defaults to false
  development_mode: false

  # If true, allows Gort to respond to commands prefixed with ! instead of only
  # via direct mentions. Defaults to true.
  enable_spoken_commands: true

# Not yet supported
database:
  # The host where Gort's PostgreSQL database lives. Defaults to localhost.
  host: localhost

  # The port at which Gort may access its PostgreSQL database. Defaults to 5432.
  port: 5432

  # The user to connect to Gort’s PostgreSQL database.
  user: gort

  # The password for connecting to Gort’s PostgreSQL database.
  # TODO Think of a better way to do this. Maybe allow {{ variables }} that
  # can be injected at startup and interpolated? Is that over-engineering?
  password: "veryKleverPassw0rd!"

  # Set this to true to have Gort connect to its database using SSL.
  # Defaults to false.
  ssl_enabled: false

  # Database connection pool size. Defaults to 10.
  pool_size: 10

  # Number of milliseconds to wait to checkout a database connection from the pool.
  # Defaults to 15000 ms.
  pool_timeout: 15000

  # Amount of time to wait for execution of a database query to complete.
  # Defaults to 15000 ms.
  query_timeout: 15000

# Move this to the relay config later.
docker:
  host: unix:///var/run/docker.sock

slack:
- # An arbitrary name for human labelling purposes.
  # TODO Do we need this? Is it confusing? Should we use the API-provided workspace name?
  name: ClockworkSoul

  # Bot User OAuth Access Token (https://api.slack.com/docs/token-types#bot)
  # used to connect to Slack. You want the one that starts with "xoxb"
  api_token: xoxb-210987654321-123456789012-nyWJ3U4JoWuUtaUkRPKn0dJR

  # The chat icon for the bot. If not defined defaults to the configured bot default.
  icon_url: https://emoji.slack-edge.com/T023V8ZFQEQ/gort/78a0c1607eeb1f29.png

  # The name of the bot, as it appears in Slack. Defaults to the name used
  # when the bot was added to the account.
  bot_name: Gort

bundles:
- name: test
  description: A test bundle.
  docker:
    image: clockworksoul/relaytest
    tag: latest

  commands:
    splitecho:
      description: "Echos back anything sent to it, one parameter at a time."
      executable: "/opt/app/splitecho.sh"
    curl:
      description: "The official curl command."
      executable: "/usr/bin/curl"
    echo:
      description: "Echos back anything sent to it, all at once."
      executable: "/bin/echo"
